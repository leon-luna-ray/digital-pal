{"version":3,"sources":["hooks/useEventListener.js","hooks/useMediaQuery.js","hooks/useStorage.js","hooks/useDarkMode.js","components/DarkModeBtn.js","components/DigitalPal.js","components/App.js","index.js"],"names":["useEventListener","eventType","callback","element","window","callbackRef","useRef","useEffect","current","handler","e","addEventListener","removeEventListener","useMediaQuery","mediaQuery","useState","isMatch","setIsMatch","mediaQueryList","setMediaQueryList","list","matchMedia","matches","useStorage","key","defaultValue","storageObject","jsonValue","getItem","JSON","parse","initialValue","value","setValue","undefined","removeItem","setItem","stringify","remove","useCallback","useDarkMode","localStorage","darkMode","setDarkMode","prefersDarkMode","enabled","document","body","classList","toggle","DarkModeBtn","className","onClick","prevDarkMode","style","background","color","DigitalPal","icon","setIcon","digitalPal","setDigitalPal","message","setMessage","isBored","setIsBored","isHungry","setIsHungry","isOutside","setIsOutside","isSleepy","setIsSleepy","reset","setTimeout","commandBtns","name","function","map","command","index","Col","md","lg","Button","Container","Row","id","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7efc1ed7.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst useEventListener = (eventType, callback, element = window) => {\n  const callbackRef = useRef(callback);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (element == null) return;\n    const handler = (e) => callbackRef.current(e);\n    element.addEventListener(eventType, handler);\n\n    return () => element.removeEventListener(eventType, handler);\n  }, [eventType, element]);\n};\n\nexport default useEventListener;\n","import { useState, useEffect } from 'react';\nimport useEventListener from './useEventListener';\n\nconst useMediaQuery = (mediaQuery) => {\n  const [isMatch, setIsMatch] = useState(false);\n  const [mediaQueryList, setMediaQueryList] = useState(null);\n\n  useEffect(() => {\n    const list = window.matchMedia(mediaQuery);\n    setMediaQueryList(list);\n    setIsMatch(list.matches);\n  }, [mediaQuery]);\n\n  useEventListener('change', (e) => setIsMatch(e.matches), mediaQueryList);\n\n  return isMatch;\n};\n\nexport default useMediaQuery;\n","import { useCallback, useState, useEffect } from 'react';\n\nexport function useLocalStorage(key, defaultValue) {\n  return useStorage(key, defaultValue, window.localStorage);\n}\n\nexport function useSessionStorage(key, defaultValue) {\n  return useStorage(key, defaultValue, window.sessionStorage);\n}\n\nfunction useStorage(key, defaultValue, storageObject) {\n  const [value, setValue] = useState(() => {\n    const jsonValue = storageObject.getItem(key);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return defaultValue();\n    } else {\n      return defaultValue;\n    }\n  });\n\n  useEffect(() => {\n    if (value === undefined) return storageObject.removeItem(key);\n    storageObject.setItem(key, JSON.stringify(value));\n  }, [key, value, storageObject]);\n\n  const remove = useCallback(() => {\n    setValue(undefined);\n  }, []);\n\n  return [value, setValue, remove];\n}\n","import { useEffect } from 'react';\nimport useMediaQuery from './useMediaQuery';\nimport { useLocalStorage } from './useStorage';\nconst useDarkMode = () => {\n  const [darkMode, setDarkMode] = useLocalStorage('useDarkMode');\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const enabled = darkMode || prefersDarkMode;\n\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', enabled);\n  }, [enabled]);\n\n  return [enabled, setDarkMode];\n};\n\nexport default useDarkMode;\n","import React from 'react';\nimport useDarkMode from '../hooks/useDarkMode';\n\nconst DarkModeBtn = () => {\n  const [darkMode, setDarkMode] = useDarkMode();\n\n  return (\n    <div\n      className='dark-mode-btn'\n      onClick={() => setDarkMode((prevDarkMode) => !prevDarkMode)}\n      style={{\n        background: darkMode ? '#333' : '#fff',\n        color: darkMode ? 'white' : 'black',\n      }}\n    >\n      {darkMode ? 'Light ⬜️' : 'Dark ⬛️'}\n    </div>\n  );\n};\n\nexport default DarkModeBtn;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Button, Col, Row } from 'react-bootstrap';\nimport DarkModeBtn from './DarkModeBtn';\n\nconst DigitalPal = () => {\n  const [age, setAge] = useState(0);\n  const [icon, setIcon] = useState('');\n  const [digitalPal, setDigitalPal] = useState('👾');\n  const [message, setMessage] = useState('');\n  const [isBored, setIsBored] = useState(true);\n  const [isHungry, setIsHungry] = useState(false);\n  const [isOutside, setIsOutside] = useState(false);\n  const [isSleepy, setIsSleepy] = useState(false);\n  const [houseCondition, setHouseCondition] = useState(100);\n  // Each method will change the state and display a message for 3 seconds\n\n  const reset = () => {\n    setTimeout(() => {\n      setIcon('');\n      setDigitalPal('👾');\n      setMessage('');\n    }, 2000);\n  };\n\n  const feed = () => {\n    if (isHungry) {\n      setIcon('🍒');\n      setMessage('Mmmmm! That was yummy!');\n      setIsHungry(false);\n      reset();\n    } else {\n      setIcon('🚫');\n      setDigitalPal('');\n      setMessage(\"No thanks! I'm full\");\n      setIsHungry(true);\n      reset();\n    }\n  };\n  const play = () => {\n    if (isBored) {\n      setIcon('🎾');\n      setMessage(\"yay! Let's play!\");\n      setIsBored(false);\n      setIsHungry(true);\n      reset();\n    } else {\n      setIcon('🚫');\n      setDigitalPal('');\n      setMessage(\"I don't wanna!\");\n      setIsBored(true);\n      reset();\n    }\n  };\n\n  const sleep = () => {\n    if (isSleepy) {\n      setIcon('🌙');\n      setMessage('Nite nite ...zzzzz');\n      setIsSleepy(false);\n      setIsHungry(true);\n      reset();\n    } else {\n      setIcon('🚫');\n      setDigitalPal('');\n      setMessage(\"I'm not tired!\");\n      reset();\n    }\n  };\n\n  const goInside = () => {\n    setIcon('🏡');\n    setMessage(\"Okay I'm tired...\");\n    setIsSleepy(true);\n    setIsOutside(false);\n    reset();\n  };\n\n  const goOutside = () => {\n    setIcon('☀️');\n    setMessage('Yay! I wanna play outside!');\n    setIsOutside(true);\n    reset();\n  };\n\n  const commands = [\n    { name: 'feed', color: 'btn-danger', function: feed },\n    { name: 'play', color: 'btn-warning', function: play },\n    { name: 'sleep', color: 'btn-primary', function: sleep },\n    {\n      name: isOutside ? 'go inside' : 'go outside',\n      color: 'btn-success',\n      function: isOutside ? goInside : goOutside,\n    },\n  ];\n\n  const commandBtns = commands.map((command, index) => {\n    return (\n      <Col key={index} md={6} lg={3}>\n        <Button\n          key={index}\n          className={`command-btn text-uppercase ${command.color}`}\n          onClick={command.function}\n        >\n          {command.name}\n        </Button>\n      </Col>\n    );\n  });\n\n  return (\n    <Container>\n      <Row>\n        <nav className='d-flex justify-content-end'>\n          <DarkModeBtn />\n        </nav>\n      </Row>\n      <main className='text-center'>\n        <h1 className='digital-pal-title'>Digital Pal</h1>\n        <Row className='controls'>{commandBtns}</Row>\n        <span id='action-icon' className='icon'>\n          {icon}\n        </span>\n        <span id='digital-pal' className='icon'>\n          {digitalPal}\n        </span>\n        <br />\n        <h2>{message}</h2>\n      </main>\n    </Container>\n  );\n};\n\nexport default DigitalPal;\n","import React from 'react';\nimport DigitalPal from './DigitalPal';\n\nimport '../styles/App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <DigitalPal />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}